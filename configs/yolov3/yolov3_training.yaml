data:
  train:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.voc_dataset
        class: YOLOv3Dataset
        YOLOv3Dataset:
          image_dir: '''dataset/PASCAL_VOC/images/'''
          label_dir: '''dataset/PASCAL_VOC/labels'''
          csv_path: '''dataset/PASCAL_VOC/train.csv'''
          image_size: 416
          S: [13, 26, 52]  # image_size // 32, image_size // 16, image_size // 8
          C: 20
          anchors: [[[0.28, 0.22], [0.38, 0.48], [0.9, 0.78]],
                    [[0.07, 0.15], [0.15, 0.11], [0.14, 0.29]],
                    [[0.02, 0.03], [0.04, 0.07], [0.08, 0.06]]]
          transforms:
            - iaa.Add(value=(-30, 30), per_channel=True)
            - iaa.GaussianBlur(sigma=(0, 1))
            - iaa.MotionBlur()
            - iaa.JpegCompression(compression=(0, 10))
            - iaa.Fliplr(p=0.5)
            - iaa.Flipud(p=0.5)
            - iaa.Grayscale(alpha=(0.0, 0.1))
            - iaa.Rot90(k=[0, 1, 2, 3], keep_size=False)
            # - iaa.Affine(rotate=(0, 360), shear=(-5, 5), fit_output=True)
            # - iaa.Crop(percent=(0, 0.1))
            # - iaa.Pad(percent=(0, 0.1), keep_size=False)
            - iaa.ChangeColorTemperature()
      batch_size: 32
      num_workers: 4
      pin_memory: True
      shuffle: True
      drop_last: False
  
  train_eval:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.voc_dataset
        class: YOLOv3Dataset
        YOLOv3Dataset:
          image_dir: '''dataset/PASCAL_VOC/images/'''
          label_dir: '''dataset/PASCAL_VOC/labels'''
          csv_path: '''dataset/PASCAL_VOC/train.csv'''
          image_size: 416
          S: [13, 26, 52]  # image_size // 32, image_size // 16, image_size // 8
          C: 20
          anchors: [[[0.28, 0.22], [0.38, 0.48], [0.9, 0.78]],
                    [[0.07, 0.15], [0.15, 0.11], [0.14, 0.29]],
                    [[0.02, 0.03], [0.04, 0.07], [0.08, 0.06]]]
      batch_size: 32
      num_workers: 4
      pin_memory: True
      shuffle: False
      drop_last: False
  
  valid:
    module: torch.utils.data
    class: DataLoader
    DataLoader:
      dataset:
        module: flame.core.data.voc_dataset
        class: YOLOv3Dataset
        YOLOv3Dataset:
          image_dir: '''dataset/PASCAL_VOC/images/'''
          label_dir: '''dataset/PASCAL_VOC/labels'''
          csv_path: '''dataset/PASCAL_VOC/test.csv'''
          image_size: 416
          S: [13, 26, 52]  # image_size // 32, image_size // 16, image_size // 8
          C: 20
          anchors: [[[0.28, 0.22], [0.38, 0.48], [0.9, 0.78]],
                    [[0.07, 0.15], [0.15, 0.11], [0.14, 0.29]],
                    [[0.02, 0.03], [0.04, 0.07], [0.08, 0.06]]]
      batch_size: 32
      num_workers: 4
      pin_memory: True
      shuffle: False
      drop_last: False

model:
  module: flame.core.model.darknet53
  class: YOLOv3
  YOLOv3:
    in_channels: 3
    num_classes: 20

loss:
  module: flame.core.loss.yolov3_loss
  class: YOLOv3Loss
  YOLOv3Loss:
    lambda_obj: 1
    lambda_noobj: 10
    lambda_bbox: 1
    lambda_class: 1

optim:
  module: torch.optim
  class: Adam
  Adam:
    params: config['model'].parameters()
    lr: 0.00001
    weight_decay: 0.0001

train_evaluator:
  module: flame.handlers.metric_evaluator
  class: MetricEvaluator
  MetricEvaluator:
    dataset: config['data']['train_eval']
    device: '''cuda'''
    scales: [13, 26, 52]  # image_size // 32, image_size // 16, image_size // 8
    based_anchors: [[[0.28, 0.22], [0.38, 0.48], [0.9, 0.78]],
                    [[0.07, 0.15], [0.15, 0.11], [0.14, 0.29]],
                    [[0.02, 0.03], [0.04, 0.07], [0.08, 0.06]]]

valid_evaluator:
  module: flame.handlers.metric_evaluator
  class: MetricEvaluator
  MetricEvaluator:
    dataset: config['data']['valid']
    device: '''cuda'''
    scales: [13, 26, 52]  # image_size // 32, image_size // 16, image_size // 8
    based_anchors: [[[0.28, 0.22], [0.38, 0.48], [0.9, 0.78]],
                    [[0.07, 0.15], [0.15, 0.11], [0.14, 0.29]],
                    [[0.02, 0.03], [0.04, 0.07], [0.08, 0.06]]]

metrics:
  module: flame.handlers.metrics.metrics
  class: Metrics
  Metrics:
    metrics:
      mAP:
        module: flame.handlers.metrics.evaluator
        class: Evaluation
        Evaluation:
          evaluation_fn:
            module: flame.handlers.metrics.metric_function.mAP
            class: MeanAveragePrecision
            MeanAveragePrecision:
              num_classes: 20
              iou_threshold: 0.5
              box_format: '''midpoint'''
          output_transform: 'lambda x: (x[0], x[1])'
    attach_to:
      train_evaluator: '''train'''
      valid_evaluator: '''valid'''

screenlogger:
  module: flame.handlers.screenlogger
  class: ScreenLogger
  ScreenLogger:
    eval_names:
      - '''train''' 
      - '''valid'''

history:
  module: flame.handlers.checkpoint
  class: History

checkpoint_loader:
  module: flame.handlers.checkpoint
  class: CheckpointLoader
  CheckpointLoader:
    checkpoint_path: ''''''
    mode: '''train'''

terminate_on_nan:
  module: flame.handlers.terminate_on_nan
  class: TerminateOnNan

lr_scheduler:
  module: flame.handlers.lr_scheduler
  class: ReduceLROnPlateau
  ReduceLROnPlateau:
    score_name: '''mAP'''
    evaluator_name: '''valid_evaluator'''
    mode: '''max'''
    patience: 5
    verbose: True

early_stopping:
  module: flame.handlers.early_stopping
  class: EarlyStopping
  EarlyStopping:
    score_name: '''mAP'''
    evaluator_name: '''valid_evaluator'''
    mode: '''max'''
    patience: 5

best_saver:
  module: flame.handlers.checkpoint
  class: BestSaver
  BestSaver:
    dirname: '''checkpoint/YOLOv3/'''
    score_name: '''mAP'''
    evaluator_name: '''valid_evaluator'''
    n_saved: 1

backup_saver:
  module: flame.handlers.checkpoint
  class: BackupSaver
  BackupSaver:
    modules:
      - '''model'''
      - '''optim'''
      - '''backup_saver'''
      - '''best_saver'''
      - '''history'''
      - '''lr_scheduler'''
      - '''early_stopping'''
    dirname: '''checkpoint/YOLOv3/'''
    save_interval: 1
    n_saved: 1

engine:
  module: flame.core.engine.yolov3_engine
  class: Trainer
  Trainer:
    dataset: config['data']['train']
    device: '''cuda'''
    max_epochs: 10000
    scales: [13, 26, 52]  # image_size // 32, image_size // 16, image_size // 8
    based_anchors: [[[0.28, 0.22], [0.38, 0.48], [0.9, 0.78]],
                    [[0.07, 0.15], [0.15, 0.11], [0.14, 0.29]],
                    [[0.02, 0.03], [0.04, 0.07], [0.08, 0.06]]]

extralibs:
  torch: torch
  iaa: imgaug.augmenters